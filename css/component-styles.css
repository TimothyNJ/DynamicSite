/**
* Component Core Styles
* 
* Unified styling for all UI components including sliders and input fields.
* This creates a consistent visual language and behavior across all
* interactive elements of the application.
*/

:root {
  /* Theme color ranges */
  --light-page-start: #4b5b62;
  --light-page-end: #ffffff;
  --dark-page-start: #000000;
  --dark-page-end: #96b7c4;

  /* Component container ranges */
  --light-component-start: #7c8e94; /* 34% of range between page colors */
  --light-component-end: #a0b2b8; /* 68% of range between page colors */
  --dark-component-start: #384c59; /* 34% of range between page colors */
  --dark-component-end: #6c7f8b; /* 68% of range between page colors */

  /* Active element colors */
  --active-element-start: #6a0dad; /* Purple */
  --active-element-end: #4169e1; /* Royal Blue */

  /* Store percentage values for JavaScript to read */
  --light-component-start-percent: 34;
  --light-component-end-percent: 68;
  --dark-component-start-percent: 34;
  --dark-component-end-percent: 68;

  /* Spacing & sizing variables */
  --component-spacing: 5px;
  --component-padding: 8px 12px;
  --component-gap: 4px;
  --component-border-radius: 9999px;
  --component-height: auto;
  --border-thickness: 1px;

  /* Font variables */
  --component-font-size: clamp(0.5rem, 1.2vw, 2.3rem);
  --component-font-weight: bold;
  --component-text-color: #ffffff;
}

/* Common section styling */
.settings-section {
  margin-bottom: var(--component-spacing);
}

/* Container styles for all component types */
.component-container,
.slider-container,
.theme-container,
.time-format-container,
.language-container,
.first-day-container,
.date-format-container,
.units-container,
.form-container {
  display: flex;
  justify-content: center;
  margin: var(--component-spacing) 0;
}

/* Base component styles - applies to sliders and input containers */
.component-base,
.slider-selector,
.theme-selector,
.time-format-selector,
.language-selector,
.first-day-selector,
.date-format-selector,
.units-selector {
  display: inline-flex;
  position: relative;
  height: var(--component-height);
  border-radius: var(--component-border-radius);
  background: linear-gradient(
    -25deg,
    var(--light-component-start) 0%,
    var(--light-component-end) 100%
  );
  overflow: visible;
  padding: 0;
  gap: var(--component-gap);
}

/* Dark theme component styling */
body[data-theme="dark"] .component-base,
body[data-theme="dark"] .slider-selector,
body[data-theme="dark"] .theme-selector,
body[data-theme="dark"] .time-format-selector,
body[data-theme="dark"] .language-selector,
body[data-theme="dark"] .first-day-selector,
body[data-theme="dark"] .date-format-selector,
body[data-theme="dark"] .units-selector {
  background: linear-gradient(
    -25deg,
    var(--dark-component-start) 0%,
    var(--dark-component-end) 100%
  );
}

/* Text styling for selectors */
.component-base .option h3,
.slider-selector .option h3 {
  white-space: nowrap;
  overflow: visible;
  text-overflow: clip;
  max-width: none;
  font-size: var(--component-font-size);
  margin: 0;
  font-weight: var(--component-font-weight);
  position: relative;
  z-index: 3;
  transition: color 0.5s ease;
  padding: 2px 8px;
}

/* Container border animation */
.component-base .border-container,
.slider-selector .border-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
  clip-path: inset(0 0 0 0 round var(--component-border-radius));
}

/* Border segments */
.border-segment {
  position: absolute;
  background: linear-gradient(
    to right,
    var(--active-element-start),
    var(--active-element-end)
  );
  opacity: 1;
  transition: transform 0.8s cubic-bezier(0.1, 0.8, 0.2, 1);
}

/* Top and bottom segments only */
.border-top,
.border-bottom {
  height: var(--border-thickness);
  width: 100px; /* Default width, will be set in JS */
}

.border-top {
  top: 0;
}

.border-bottom {
  bottom: 0;
}

/* Option buttons */
.option {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  cursor: pointer;
  z-index: 1;
  transition: color 0.5s ease;
  padding: 0;
  border-radius: var(--component-border-radius);
  overflow: visible;
  width: 110px; /* Default width, will be adjusted by JS */
}

/* Sliding background */
.selector-background {
  position: absolute;
  top: 0;
  bottom: 0;
  height: 100%;
  border-radius: var(--component-border-radius);
  background: linear-gradient(
    145deg,
    var(--active-element-start),
    var(--active-element-end)
  );
  z-index: 0;
}

/* Settings container styles */
.settings-container {
  display: flex;
  flex-direction: column;
  gap: var(--component-spacing);
  margin: var(--component-spacing) 0;
  align-items: center;
  justify-content: center;
  opacity: 1;
}

/* Loading indicator styling */
.loading-indicator {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100px;
  width: 100%;
  font-size: 1.2rem;
  background-color: transparent;
  position: relative;
}

.loading-indicator::after {
  content: "";
  width: 30px;
  height: 30px;
  border: 3px solid rgba(100, 100, 100, 0.2);
  border-top-color: var(--active-element-end);
  border-radius: 50%;
  position: absolute;
  left: calc(50% - 15px);
  top: calc(50% + 15px);
  animation: spin 0.5s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Animation for settings container */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.settings-container {
  animation: fadeIn 0.3s ease-in-out forwards;
}

/* Form field styling */
.form-container {
  display: flex;
  flex-direction: column;
  gap: var(--component-spacing);
  width: 100%;
  max-width: 500px;
  margin: var(--component-spacing) auto;
}

.form-field {
  display: flex;
  flex-direction: column;
  margin: var(--component-spacing) 0;
}

/* No labels by default */
.form-field label {
  display: none;
}

/* Text input styling to match selectors */
.text-input {
  background: linear-gradient(
    -25deg,
    var(--light-component-start) 0%,
    var(--light-component-end) 100%
  );
  border: none;
  border-radius: var(--component-border-radius);
  padding: var(--component-padding);
  font-size: var(--component-font-size);
  color: var(--component-text-color);
  width: 100%;
  transition: box-shadow 0.3s ease;
}

/* Dark theme input styling */
body[data-theme="dark"] .text-input {
  background: linear-gradient(
    -25deg,
    var(--dark-component-start) 0%,
    var(--dark-component-end) 100%
  );
}

/* Input focus state */
.text-input:focus {
  outline: none;
  box-shadow: 0 0 0 2px rgba(106, 13, 173, 0.3);
}

/* Input placeholder color */
.text-input::placeholder {
  color: rgba(255, 255, 255, 0.7);
}

/* Add hover effect to match sliders */
.text-input:hover {
  box-shadow: 0 0 0 1px var(--active-element-start);
}

/* Option icon styling */
.option-icon {
  margin-right: 5px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}
