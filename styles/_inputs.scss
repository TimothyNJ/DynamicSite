// _inputs.scss - Text inputs and form field styles
// Extracted from input-styles.css and component-styles.css during consolidation
// Created: 26-May-2025

// ==============================================
// Dynamic Input System (Horizontal Expansion) - Original
// ==============================================
.dynamic-input-wrapper {
  position: relative;
  display: inline-flex;
  max-width: 100%;  // Add constraint to prevent growing beyond parent
  // No fixed min-width - let JavaScript control based on content
  // Let JavaScript control the width dynamically
  // No max-width restriction - allow full width usage
  margin: var(--component-spacing) 0;
  background: linear-gradient(-25deg, var(--light-slider-start) 0%, var(--light-slider-end) 100%);
  border-radius: var(--input-border-radius);
  // No overflow:hidden needed - padding prevents clipping
  // No transition on wrapper - width should change instantly
  
  body[data-theme="dark"] & {
    background: linear-gradient(-25deg, var(--dark-slider-start) 0%, var(--dark-slider-end) 100%);
  }
}

// Inner container for text
.text-input-inner {
  padding: 2px var(--input-safe-padding);  // 2px vertical to match slider buttons, calculated horizontal
  margin: 0;
  width: 100%;
  display: flex;
  align-items: center;
}

// Update dynamic-text-input to be transparent
.dynamic-text-input {
  background: transparent !important;
  border: none;
  color: var(--text-color-dark);
  font-size: var(--component-font-size);
  font-weight: var(--component-font-weight);
  font-family: var(--font-family-primary);
  margin: 0;
  resize: none;
  overflow: hidden;
  width: 100%;
  line-height: 1.2;
  text-align: center;
  
  // Remove default textarea styles
  &:focus {
    outline: none;
  }
  
  // Placeholder styling with CSS variables
  &::placeholder {
    color: var(--text-color-dark-secondary);
    opacity: 0.7;
  }
}

// ==============================================
// Form Containers
// ==============================================
.form-container {
  display: flex;
  flex-direction: column;
  gap: 5px;
  width: 100%;
  // No max-width restriction
  margin: 5px auto;
}

.form-field {
  display: flex;
  flex-direction: column;
  margin: 5px 0;
  
  // Hide labels by default
  label {
    display: none;
  }
}

// ==============================================
// Text Input Styling
// ==============================================
.text-input {
  background: linear-gradient(
    -25deg,
    var(--light-slider-start) 0%,
    var(--light-slider-end) 100%
  );
  border: none;
  border-radius: 9999px;
  padding: 8px 12px;
  font-size: clamp(0.5rem, 1.2vw, 2.3rem);
  color: #ffffff;
  width: 100%;
  transition: box-shadow 0.3s ease;
  
  // Dark theme styling
  body[data-theme="dark"] & {
    background: linear-gradient(
      -25deg,
      var(--dark-slider-start) 0%,
      var(--dark-slider-end) 100%
    );
  }
  
  // Focus state
  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px rgba(106, 13, 173, 0.3);
  }
  
  // Hover state to match sliders
  &:hover {
    box-shadow: 0 0 0 1px var(--active-button-start);
  }
  
  // Placeholder styling
  &::placeholder {
    color: rgba(255, 255, 255, 0.7);
  }
}

// ==============================================
// Text Measurement Helper
// ==============================================
.text-measurement-helper {
  // Mirror all text input styles using CSS variables
  font-size: var(--component-font-size) !important;
  font-weight: var(--component-font-weight) !important;
  font-family: var(--font-family-primary) !important;
  line-height: 1.2 !important;
  letter-spacing: normal !important;
  text-transform: none !important;
  
  // Ensure measurement accuracy
  position: absolute !important;
  visibility: hidden !important;
  height: auto !important;
  width: auto !important;
  white-space: pre !important;
  pointer-events: none !important;
  
  // Reset any inherited styles
  margin: 0 !important;
  padding: 0 !important;
  border: 0 !important;
  outline: 0 !important;
  background: none !important;
  color: var(--text-color-dark) !important;
}


