// _components.scss - Generic reusable component styles
// Extracted from component-styles.css during consolidation
// Created: 26-May-2025

// ==============================================
// Leftover Generic Component Classes - REMOVED
// ==============================================
// The project originally planned to use a single generic component engine
// but pivoted to type-specific engines (slider_component_engine, etc.)
// These classes were removed on 9-Jun-2025 as they were unused.
// Each component type now handles its own styling.

// ==============================================
// Content Isolation Container
// ==============================================
.content-isolation-container {
  width: 100%;              // Always exactly parent width
  height: 100%;             // Fill parent height
  display: grid;            // Use CSS Grid for hard constraints
  grid-template-columns: minmax(0, 1fr);  // Column cannot exceed container width
  align-items: center;      // Center children vertically in grid
  justify-items: center;    // Center children horizontally in grid
  overflow: visible;        // Allow visual overflow (dropdowns, etc.)
  position: relative;       // Establish positioning context
  border: 1px solid red;    // Red border for visualization
  // Removed contain property - didn't create the hard boundary we need
}

// ==============================================
// Content Flex Container - Restores flex behavior inside grid
// ==============================================
.content-flex-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  border: 1px solid cyan;  // Cyan border for visualization
}

// ==============================================
// Settings Container - Simple vertical stack
// ==============================================
.settings-container {
  display: flex;
  flex-direction: column;
  align-items: center;  // Center children horizontally
  width: fit-content;  // Only as wide as content needs
  max-width: 100%;     // But never wider than parent
  flex: 0 1 auto;      // Prevent growing beyond content
  // No gap, margin, padding, or alignment overrides
  // Let natural centering from parent container apply
  box-sizing: border-box;
  border: 1px solid orange; // Changed from red to orange
  
  // All direct children will inherit centering
  // No need to override anything
}

// ==============================================
// Vendor Request Container - Same pattern as settings
// ==============================================
.vendor-request-container {
  display: flex;
  flex-direction: column;
  align-items: center;  // Center children horizontally
  width: fit-content;  // Only as wide as content needs
  max-width: 100%;     // But never wider than parent
  flex: 0 1 auto;      // Prevent growing beyond content
  gap: 20px;           // Space between items
  box-sizing: border-box;
  border: 1px solid purple; // Debug border
}

// ==============================================
// Demo Item - For component demos
// ==============================================
.demo-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
}

// ==============================================
// Settings Layout Classes
// ==============================================
// All grid and demo component styles removed
// Components stack naturally without special styling

// ==============================================
// Debug Borders for Component Containers
// ==============================================
// These are the rectangular bounding boxes, NOT the visual components
// Temporary visualization borders - remove for production

#demo-text-input-container,
#demo-slider-container,
#demo-button-container,
#demo-wheel-selector-container,
#demo-multi-select-container,
#demo-calendar-picker-container,
#demo-wheel-time-selector-container,
#demo-wheel-date-picker-container,
#demo-file-upload-container {
  border: 1px solid yellow;
  display: flex;
  justify-content: center;
  align-items: center;
  width: fit-content;
  max-width: 100%;
  flex: 0 1 auto;  // Prevent growing beyond content
}
