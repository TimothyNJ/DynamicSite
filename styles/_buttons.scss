// _buttons.scss - Button component styles
// Matches slider engine architecture for consistency
// Created: 10-Jun-2025

// ==============================================
// Active State
// ==============================================
.button-component.active .button-content h3 {
  color: #ffffff;
}

// ==============================================
// Button Container (matches slider-container)
// ==============================================
.button-container {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: var(--component-spacing) 0;
  border: 1px solid yellow; // Debug border to match sliders
}

// ==============================================
// Button Component (matches slider-selector)
// ==============================================
.button-component {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 9999px;
  cursor: pointer;
  overflow: visible; // Allow borders to animate outside
  transition: all 0.3s ease;
  z-index: 0;
  background: linear-gradient(-25deg, var(--light-slider-start) 0%, var(--light-slider-end) 100%);
  
  // Dark theme support
  body[data-theme="dark"] & {
    background: linear-gradient(-25deg, var(--dark-slider-start) 0%, var(--dark-slider-end) 100%);
  }
  
  // Border container for animations (matches slider)
  .border-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
    clip-path: inset(0 0 0 0 round 9999px);
  }
  
  // Default dot button (invisible dot placeholder)
  &.button-default-dot {
    height: auto; // Let content determine height
    
    .button-content {
      padding: 2px 2px; // Minimal padding for default dot
      
      h3 {
        opacity: 0; // Make the dot invisible
      }
    }
    
    // Hide sliding borders for circular button
    .border-container {
      display: none;
    }
    
    // Circular hover ring effect
    &.hover-ring {
      // Create a 1px border inside the circle using box-shadow
      box-shadow: inset 0 0 0 1px var(--active-button-end);
      transition: box-shadow 0.3s ease;
    }
  }
  
  // Text button
  &.button-text {
    height: auto; // Let content determine height
    
    .button-content {
      padding: var(--component-content-padding); // Standardized content padding
    }
  }
  
  // Active state background (for toggle buttons) - MUST BE LAST for specificity
  &.active {
    background: linear-gradient(145deg, var(--active-button-start), var(--active-button-end));
  }
  
  // Higher specificity for active state to override theme backgrounds
  body[data-theme="light"] &.active,
  body[data-theme="dark"] &.active {
    background: linear-gradient(145deg, var(--active-button-start), var(--active-button-end));
  }
}

// ==============================================
// Border Hover Animation System (matches slider)
// ==============================================
.button-component .border-segment {
  position: absolute;
  background: linear-gradient(
    to right,
    var(--active-button-start),
    var(--active-button-end)
  );
  opacity: 1;
  transition: transform 0.8s cubic-bezier(0.1, 0.8, 0.2, 1);
}

.button-component .border-top,
.button-component .border-bottom {
  height: 1px;
  width: 100px; // Default width, will be set in JS
}

.button-component .border-top {
  top: 0;
}

.button-component .border-bottom {
  bottom: 0;
}

// ==============================================
// Button Content (matches slider option content)
// ==============================================
.button-content {
  position: relative;
  z-index: 1; // Above the background pseudo-element
  display: flex;
  align-items: center;
  justify-content: center;
  
  h3 {
    font-size: var(--component-font-size);
    font-weight: var(--component-font-weight);
    font-family: var(--font-family-primary);
    color: var(--text-color-dark);
    margin: 0;
    padding: 0;
    white-space: nowrap;
    overflow: visible;
    text-overflow: clip;
    max-width: none;
    transition: color 0.3s ease;
  }
}

// ==============================================
// Click Feedback
// ==============================================
.button-component:active:not(.disabled) {
  transform: scale(0.98);
}

// ==============================================
// Disabled State
// ==============================================
.button-component.disabled {
  opacity: 0.5;
  cursor: not-allowed;
  
  &:active {
    transform: none;
  }
  
  .border-segment {
    opacity: 0 !important;
  }
}
